{% extends 'base.html.twig' %}

{% block title %} Wolne terminy {% endblock %}

{% block body %}
<div class="container">
    <div id="calendar-holder"></div>
</div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            var calendarEl = document.getElementById('calendar-holder');
            var now = new Date();
            var end = new Date();
            var calendar = new FullCalendar.Calendar(calendarEl, {
                defaultView: 'timeGridWeek',
                editable: true,
                timeZone: 'Europe/Warsaw',
                locale: 'pl',
                allDaySlot: false,
                weekends: false,
                slotDuration: '00:20',
                selectable: true,
                selectConstraint: "businessHours",
                eventStartEditable: false,
                eventDurationEditable: false,
                navLinks: true,
                hour12:false,
                validRange: {
                    start: now.setDate(now.getDate()+1),
                    end: end.setMonth(end.getMonth()+1)
                },
                buttonText: {
                    today: 'dziś',
                    month: 'miesiąc',
                    week: 'tydzień',
                    day: 'dzień',
                    list: 'lista',
                },

                selectOverlap: function(event) {
                    return event.rendering === 'background';
                },

                businessHours: [ // specify an array instead
                    {% for t in workTime %}
                    {
                        daysOfWeek: [ {{ t.day }}],
                        startTime: '{{t.start|date("H:i")}}',
                        endTime: '{{t.end|date("H:i")}}'
                    },
                    {% endfor %}
                ],
                eventSources: [
                    {
                        url: "{{ path('fc_load_events', {'id':id}) }}",
                        method: "POST",
                        extraParams: {
                            filters: JSON.stringify({id:'{{id}}' })
                        },
                        failure: () => {
                            // alert("There was an error while fetching FullCalendar!");
                        },
                    },
                ],
                header: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'dayGridMonth,timeGridWeek,timeGridDay',
                },
                plugins: [ 'interaction', 'dayGrid', 'timeGrid', 'momentPlugin' ], // https://fullcalendar.io/docs/plugin-index
                visibleRange: function(currentDate) {
                    // Generate a new date for manipulating in the next step
                    var startDate = new Date(currentDate.valueOf());
                    var endDate = new Date(currentDate.valueOf());

                    // Adjust the start & end dates, respectively
                    startDate.setDate(startDate.getDate()); // Today
                    endDate.setDate(endDate.getDate() + 30); // Month in the future

                    return { start: startDate, end: endDate };
                },
                select: function(info) {

                    var start = moment(info.startStr).format('YYYY-MM-DD HH:mm');
                    var end = moment(info.endStr).format('YYYY-MM-DD HH:mm');
                    var root_url="{{path('visit_add', {'id':id})}}";
                    window.location = root_url+'?start='+start+'&end='+end;
                }
            });
            calendar.render();
        });
    </script>
{% endblock %}